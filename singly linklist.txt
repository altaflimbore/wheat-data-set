#include<iostream>
using namespace std;

struct Node{
    int data;
    struct Node *next;
};

void insertStart(struct Node** head, int data){
    
    // dynamically create memory for this newNode
    struct Node* newNode = (struct Node*) malloc(sizeof(struct Node));
    
    // assign data value
    newNode->data = data;
    // change the next node of this newNode 
    // to current head of Linked List
    newNode->next = *head;

    //re-assign head to this newNode
    *head = newNode;
}
void display(struct Node* node){

    // as linked list will end when Node is Null
    while(node!=NULL){
        cout << node->data << " "; node = node->next;
    }
    cout << endl;
}
void deleteStart(struct Node** head){
    struct Node* temp = *head;
  
    // if there are no nodes in Linked List can't delete
    if(*head == NULL){
        cout << "Linked List Empty, nothing to delete" ; 
        return; 
    } 

    // move head to next node 
    *head = (*head)->next;
    cout << "\nValue deleted: " << temp->data << endl;
    free(temp);
}
int main()
{
    struct Node* head = NULL;

    // Need '&' i.e. address as we need to change head
    insertStart(&head,5);
    insertStart(&head,10);
    insertStart(&head,15);

    display(head); 
     deleteStart(&head);
    display(head);
  return 0;
}     
